-- CREATING THE TABLE WITH INPUTS
CREATE TABLE HR (
	id VARCHAR(20),
	first_name VARCHAR(50),
	last_name VARCHAR(50),
	birthdate TEXT,
	gender VARCHAR(20),
	race VARCHAR(50),
	department VARCHAR(50),
	jobtitle VARCHAR(50),
	location VARCHAR(50),
	hire_date TEXT,
	termdate TEXT,
	location_city VARCHAR(50),
	location_state VARCHAR(50)
);
--LOADING THE DATA
COPY HR (id,first_name,last_name,birthdate,gender,race,
	department,jobtitle,location,
	hire_date,termdate,location_city,location_state)
FROM 'C:\Users\Tejas\Desktop\SQL Projects\Human Resources.csv'
DELIMITER ',' 
CSV HEADER;

--CHECKING THE DATASET
SELECT * FROM HR;

---DATA CLEANING---
--CHANGING THE DATATYPE 
ALTER TABLE HR 
ALTER COLUMN birthdate TYPE DATE USING TO_DATE(birthdate, 'MM-DD-YY');

ALTER TABLE HR
ALTER COLUMN hire_date TYPE DATE USING TO_DATE(hire_date, 'MM-DD-YY');

ALTER TABLE HR 
ALTER COLUMN termdate TYPE DATE 
USING 
    CASE 
        WHEN termdate IS NULL OR termdate = '' THEN NULL
        ELSE termdate::DATE  
    END;

-- RENAMING COLUMN NAME
ALTER TABLE HR
RENAME COLUMN id TO emp_id;

-- MAKING A NEW COLUMN OF AGE
ALTER TABLE HR ADD COLUMN age INT;

UPDATE HR
SET "age" = EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM BIRTHDATE);

--FINDING THE MINIMUM AND MAXIMUM AGE OF EMPLOYEES
SELECT
	MIN(AGE),
	MAX(AGE)
FROM HR;

---DATA ANALYIS---
--GENDER BREAKDOWN OF EMPLOYEES
SELECT
	GENDER,
	COUNT(GENDER) AS EMPLOYEES
FROM HR
GROUP BY 1
ORDER BY 1 DESC;

--RACE/ETHNICITY BREAKDOWN OF EMPLOYEES
SELECT
	RACE,
	COUNT(*) AS EMPLOYEES
FROM HR
GROUP BY 1
ORDER BY 1 DESC;

--AGE GROUPS OF EMPLOYEES IN THE COMPANY
SELECT
	CASE
		WHEN "age" BETWEEN 18 AND 30 THEN 'YOUNG(18-30)'
		WHEN "age" BETWEEN 31 AND 45 THEN 'MIDDLE AGE(31-45)'
		ELSE 'OLD(45+)'
	END AS age_group,
	COUNT(*)
FROM HR
GROUP BY 1;

--AGE GROUPS BY GENDER
SELECT
	CASE
		WHEN "age" BETWEEN 18 AND 30 THEN 'YOUNG(18-30)'
		WHEN "age" BETWEEN 31 AND 45 THEN 'MIDDLE AGE(31-45)'
		ELSE 'OLD(45+)'
	END AS age_group, GENDER,
	COUNT(*)
FROM HR
GROUP BY 1,2
ORDER BY 1,2;

--HOW MANY EMPLOYEES WORK AT HEADQUATERS VS REMOTE
SELECT 
	LOCATION,
	COUNT(*)
FROM HR
GROUP BY 1;

--WHAT IS THE AVERAGE LENGTH OF EMPLOYEMENT OF AN EMPLOYEE
SELECT
	ROUND(AVG(COALESCE(termdate, CURRENT_DATE)- hire_date)/365,2) AS Avg_employement_yrs
FROM HR;

-- GENDER DISTRIBUTION ACROSS DEPARTMENT
SELECT
	DEPARTMENT,
	GENDER,
	COUNT(*)
FROM HR
GROUP BY 1, 2;

--JOB DISTRIBUTION ACROSS THE COMPANY
SELECT
	JOBTITLE,
	COUNT(*)
FROM HR
GROUP BY 1
ORDER BY 2 DESC;

--WHICH DEPARTMENT HAS THE HIGHEST TURNOVER RATE
SELECT 
	DEPARTMENT,
	TOTAL_COUNT,
	TERMINATION_COUNT,
	ROUND(TERMINATION_COUNT::DECIMAL /NULLIF(TOTAL_COUNT,0),2) AS TERMINATION_RATE
FROM(
	SELECT DEPARTMENT,
	COUNT(*) AS TOTAL_COUNT,
	SUM(CASE WHEN TERMDATE <= CURRENT_DATE THEN 1 ELSE 0 END) AS TERMINATION_COUNT
	FROM HR
	GROUP BY 1
) AS SUBQUERY
ORDER BY TERMINATION_RATE DESC;

--DISTRIBUTION OF EMPLOYEES ACROSS LOCATION BY STATE
SELECT 
	location_state,
	COUNT(*) AS COUNT
FROM HR
GROUP BY 1
ORDER BY 2 DESC;

--EMPLOYEES COUNT CHANGED OVER TIME BASED ON HIRE DATE AND TERMDATE
SELECT
	YEARS,
	HIRES,
	TERMINATIONS,
	HIRES-TERMINATIONS AS NET_CHANGE,
	ROUND((HIRES-TERMINATIONS)*100/HIRES, 2) AS NET_CHANGE_PERCENT
FROM (
	SELECT
		EXTRACT(YEAR FROM hire_date) AS YEARS,
		COUNT(*) AS HIRES,
		SUM(CASE WHEN termdate <= CURRENT_DATE THEN 1 ELSE 0 END) AS TERMINATIONS
	FROM HR
	GROUP BY 1
) AS SUBQUERY
ORDER BY 1;

--AVERAGE TENURE FOR WHICH DEPARTMENT
SELECT 
	DEPARTMENT,
	ROUND(AVG((COALESCE(termdate, CURRENT_DATE)-hire_date)/365),2) AS AVG_TENURE
FROM HR
GROUP BY 1;

---END OF ANALYSIS---
	